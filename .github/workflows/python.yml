name: Python

on:
  push:
    # branches: ["main"]
  pull_request:
    # branches: ["main"]

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  envfile: ${{ secrets.ENV }}
  mode: testing
  "POETRY_VIRTUALENVS_IN_PROJECT": false
  "POETRY_VIRTUALENVS_OPTIONS_ALWAYS_COPY": false
  "POETRY_VIRTUALENVS_OPTIONS_NO_PIP": false
  "POETRY_VIRTUALENVS_OPTIONS_NO_SETUPTOOLS": true

jobs:
  build:
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10", "3.11"]

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }} on ${{matrix.os}}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Write environment
        run: |
          echo $envfile > .env
          sed -i 's/ /\n/g' .env
          source .env

      - name: Install dependencies
        run: |
          #make install
          # make install-tests
          python -m pip install poetry
          python -m poetry install --no-root
          source $(poetry env info --path)/bin/activate

      - name: Lint with flake8
        run: |
          python -m pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run tests
        run: |
          python -m pip install pytest
          make test

  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Dockerfile
        run: |
          make docker
